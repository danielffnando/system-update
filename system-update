#!/bin/bash
OS=
if [ -f /etc/redhat-release ]; then
  OS="RedHat"
fi
if [ -f /etc/system-release ]; then
  OS="CentOS"
fi
if [ -f /etc/debian_version ]; then
  OS="Debian"
fi
if [ -z "$OS" ]; then
  echo "Operating system not supported."
  exit 1
fi
CONFIRM="-y"
if test $1; then
  if [[ $1 == "-s" || $1 == "--simulate" ]]; then
    CONFIRM="-n"
  else
    echo "Usage: $0 [-s | --simulate]"
    exit 1
  fi
fi
if [ $OS == "Debian" ]; then
  sudo apt-get update
  if [ $CONFIRM == "-y" ]; then
    sudo apt-get dist-upgrade -y
    sudo apt-get -f install
    sudo apt-get autoremove --purge -y
    sudo apt-get clean
  else
    sudo apt-get dist-upgrade --assume-no
  fi
else
  sudo yum update $CONFIRM
  sudo yum clean all
fi
if [ $CONFIRM == "-y" ]; then
  COMPOSER=$(command -v composer)
  if [ ! -z "$COMPOSER" ]; then
    echo ""
    echo "Updating composer..."
    composer self-update
    echo ""
    echo "Updating composer global projects..."
    composer global update
    CGR=$(command -v cgr)
    if [ ! -z "$CGR" ]; then
      echo ""
      echo "Updating cgr projects..."
      cgr update
    fi
  fi
  DRUSH=$(command -v drush-versions)
  if [ ! -z $DRUSH ]; then
    echo ""
    echo "Updating drush projects..."
    drush-versions up
  fi
  NVM_DIR="$HOME/.nvm"
  if [ -d $NVM_DIR ]; then
    echo ""
    echo "Updating nodejs..."
    [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"  # This loads nvm
    nvm install stable
  fi
  PIP=$(command -v pip)
  if [ ! -z "$PIP" ]; then
    if [ $PIP == $HOME/.local/bin/pip ]; then
      echo ""
      echo "Updating pip..."
      pip install -U pip --user
      AWS=$(command -v aws)
      if [ ! -z "$AWS" ]; then
        if [ $AWS == $HOME/.local/bin/aws ]; then
          echo ""
          echo "Updating aws-cli..."
          pip install -U awscli --user
        else
          echo ""
          echo "Unable to update aws since it is not installed for the local user."
        fi
      fi
    else
      echo ""
      echo "Unable to update pip since it is not installed for the local user."
    fi
  fi
  PLATFORM=$(command -v platform)
  if [ ! -z "$PLATFORM" ]; then
    echo ""
    echo "Updating platform..."
    platform self-update --yes
  fi
  RVM=$(command -v rvm)
  if [ ! -z "$RVM" ]; then
    echo ""
    echo "Updating rvm..."
    curl -sSL https://get.rvm.io | bash -s stable
    rvm reload
  fi
  WP=$(command -v wp)
  if [ ! -z "$WP" ]; then
    echo ""
    echo "Updating wp-cli..."
    wp cli update --yes
  fi
fi
